[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 readepi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zulma M. Cucunubá. Author, maintainer. David Santiago Quevedo. Author. Santiago Loaiza. Author. Geraldine Gómez Millán. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cucunubá Z, Quevedo D, Loaiza S (2023). vaccineff: Estimation Vaccines Effectiveness Based Different Designs. R package version 0.0.1.","code":"@Manual{,   title = {vaccineff: Estimation of the Vaccines Effectiveness Based on Different Designs},   author = {Zulma M. Cucunubá and David Santiago Quevedo and Santiago Loaiza},   year = {2023},   note = {R package version 0.0.1}, }"},{"path":"/index.html","id":"vaccineff-an-r-package-with-tools-for-estimating-vaccine-effectiveness-and-vaccinne-related-metrics-","dir":"","previous_headings":"","what":"vaccineff: an R package with tools for estimating vaccine effectiveness and vaccinne related metrics","title":"Estimation of the Vaccines Effectiveness Based on Different Designs","text":"vaccineff R package offers tools estimating vaccine effectiveness, using series epidemiological designs (including cohort studies, test-negative case-control, screening methods). package provides set features preparing data, analyse different study designs assessing performance models. vaccineff developed Pontificia Univeridad Javeriana part Epiverse-TRACE program.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimation of the Vaccines Effectiveness Based on Different Designs","text":"can install development version vaccineff GitHub :","code":"if(!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"TRACE-LAC/vaccineff\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Estimation of the Vaccines Effectiveness Based on Different Designs","text":"vaccineff provides minimal datasets can used test design (cohortdata, testnegdata, screeningdata) # Load example cohortdata incuded package","code":""},{"path":"/index.html","id":"contributions","dir":"","previous_headings":"Quick start","what":"Contributions","title":"Estimation of the Vaccines Effectiveness Based on Different Designs","text":"Contributors project include: David Santiago Quevedo (author) Zulma M. Cucunubá (author) Santiago Loaiza (author) Geraldine Gómez (contributor)","code":""},{"path":"/reference/coh_eff_noconf.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to estimate the vaccine effectiveness based on the vaccination\nstatus.\nThe function relies on the implementation of the Cox model for proportional\nhazards on survival package. It returns a dataframe with the summary of the\nestimation that includes the value of the hazard ratio, the vaccine\neffectiveness, and the result of the test for the Proportional Hazards\nhypothesis. If the test is rejected, it is recomended to try other\nstatistical strategies, e.g. stratifying the dataset by confounders or\nincluding time-dependent variables. — coh_eff_noconf","title":"Function to estimate the vaccine effectiveness based on the vaccination\nstatus.\nThe function relies on the implementation of the Cox model for proportional\nhazards on survival package. It returns a dataframe with the summary of the\nestimation that includes the value of the hazard ratio, the vaccine\neffectiveness, and the result of the test for the Proportional Hazards\nhypothesis. If the test is rejected, it is recomended to try other\nstatistical strategies, e.g. stratifying the dataset by confounders or\nincluding time-dependent variables. — coh_eff_noconf","text":"Function estimate vaccine effectiveness based vaccination status. function relies implementation Cox model proportional hazards survival package. returns dataframe summary estimation includes value hazard ratio, vaccine effectiveness, result test Proportional Hazards hypothesis. test rejected, recomended try statistical strategies, e.g. stratifying dataset confounders including time-dependent variables.","code":""},{"path":"/reference/coh_eff_noconf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to estimate the vaccine effectiveness based on the vaccination\nstatus.\nThe function relies on the implementation of the Cox model for proportional\nhazards on survival package. It returns a dataframe with the summary of the\nestimation that includes the value of the hazard ratio, the vaccine\neffectiveness, and the result of the test for the Proportional Hazards\nhypothesis. If the test is rejected, it is recomended to try other\nstatistical strategies, e.g. stratifying the dataset by confounders or\nincluding time-dependent variables. — coh_eff_noconf","text":"","code":"coh_eff_noconf(   data,   outcome_status_col,   time_to_event_col,   status_vacc_col,   p_thr = 0.05 )"},{"path":"/reference/coh_eff_noconf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to estimate the vaccine effectiveness based on the vaccination\nstatus.\nThe function relies on the implementation of the Cox model for proportional\nhazards on survival package. It returns a dataframe with the summary of the\nestimation that includes the value of the hazard ratio, the vaccine\neffectiveness, and the result of the test for the Proportional Hazards\nhypothesis. If the test is rejected, it is recomended to try other\nstatistical strategies, e.g. stratifying the dataset by confounders or\nincluding time-dependent variables. — coh_eff_noconf","text":"data dataset least one column generate status outcome_status_col name column containing status event (binary column) time_to_event_col name column containing time--event status_vacc_col name column containing vaccination status p_thr p-value test Proportional Hazards Hypothesis","code":""},{"path":"/reference/coh_eff_noconf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to estimate the vaccine effectiveness based on the vaccination\nstatus.\nThe function relies on the implementation of the Cox model for proportional\nhazards on survival package. It returns a dataframe with the summary of the\nestimation that includes the value of the hazard ratio, the vaccine\neffectiveness, and the result of the test for the Proportional Hazards\nhypothesis. If the test is rejected, it is recomended to try other\nstatistical strategies, e.g. stratifying the dataset by confounders or\nincluding time-dependent variables. — coh_eff_noconf","text":"age_group","code":""},{"path":[]},{"path":"/reference/coh_test_noconf.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to test the proportional hazards hypothesis of the model.\nThe function relies on the implementation of the Scheunfeld test for testing\nthe proportional hazards hypothesis on survival package.\nIt returns the result of the test and it can by plotted using plot().\nIf the test is rejected, it is recomended to try other statistical\nstrategies, e.g. stratifying the dataset by confounders or including\ntime-dependent variables. — coh_test_noconf","title":"Function to test the proportional hazards hypothesis of the model.\nThe function relies on the implementation of the Scheunfeld test for testing\nthe proportional hazards hypothesis on survival package.\nIt returns the result of the test and it can by plotted using plot().\nIf the test is rejected, it is recomended to try other statistical\nstrategies, e.g. stratifying the dataset by confounders or including\ntime-dependent variables. — coh_test_noconf","text":"Function test proportional hazards hypothesis model. function relies implementation Scheunfeld test testing proportional hazards hypothesis survival package. returns result test can plotted using plot(). test rejected, recomended try statistical strategies, e.g. stratifying dataset confounders including time-dependent variables.","code":""},{"path":"/reference/coh_test_noconf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to test the proportional hazards hypothesis of the model.\nThe function relies on the implementation of the Scheunfeld test for testing\nthe proportional hazards hypothesis on survival package.\nIt returns the result of the test and it can by plotted using plot().\nIf the test is rejected, it is recomended to try other statistical\nstrategies, e.g. stratifying the dataset by confounders or including\ntime-dependent variables. — coh_test_noconf","text":"","code":"coh_test_noconf(   data,   outcome_status_col,   time_to_event_col,   status_vacc_col,   p_thr = 0.05 )"},{"path":"/reference/coh_test_noconf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to test the proportional hazards hypothesis of the model.\nThe function relies on the implementation of the Scheunfeld test for testing\nthe proportional hazards hypothesis on survival package.\nIt returns the result of the test and it can by plotted using plot().\nIf the test is rejected, it is recomended to try other statistical\nstrategies, e.g. stratifying the dataset by confounders or including\ntime-dependent variables. — coh_test_noconf","text":"data dataset least one column generate status outcome_status_col name column containing status event (binary column) time_to_event_col name column containing time--event status_vacc_col name column containing vaccination status p_thr p-value test Proportional Hazards Hypothesis","code":""},{"path":"/reference/coh_test_noconf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to test the proportional hazards hypothesis of the model.\nThe function relies on the implementation of the Scheunfeld test for testing\nthe proportional hazards hypothesis on survival package.\nIt returns the result of the test and it can by plotted using plot().\nIf the test is rejected, it is recomended to try other statistical\nstrategies, e.g. stratifying the dataset by confounders or including\ntime-dependent variables. — coh_test_noconf","text":"age_group","code":""},{"path":[]},{"path":"/reference/get_age_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for constructing age-group variable from age column\nThis method splits an age interval from min_val to max_val into\n(max_val-min_val)/step intervals.\nBy default min_val is set 0, however it can be assigned by\nconvenience.\nIf the method finds ages greater or equal than max_val\nit assigns the string ","title":"Method for constructing age-group variable from age column\nThis method splits an age interval from min_val to max_val into\n(max_val-min_val)/step intervals.\nBy default min_val is set 0, however it can be assigned by\nconvenience.\nIf the method finds ages greater or equal than max_val\nit assigns the string ","text":"Method constructing age-group variable age column method splits age interval min_val max_val (max_val-min_val)/step intervals. default min_val set 0, however can assigned convenience. method finds ages greater equal max_val assigns string \">max_val\". avoid errors necessary set step < max_val. also suggested choose step max_val%%(step+1) = 0","code":""},{"path":"/reference/get_age_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for constructing age-group variable from age column\nThis method splits an age interval from min_val to max_val into\n(max_val-min_val)/step intervals.\nBy default min_val is set 0, however it can be assigned by\nconvenience.\nIf the method finds ages greater or equal than max_val\nit assigns the string ","text":"","code":"get_age_group(data, col_age, max_val, step, min_val = 0)"},{"path":"/reference/get_age_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for constructing age-group variable from age column\nThis method splits an age interval from min_val to max_val into\n(max_val-min_val)/step intervals.\nBy default min_val is set 0, however it can be assigned by\nconvenience.\nIf the method finds ages greater or equal than max_val\nit assigns the string ","text":"data dataset least column containing age information col_age name column containing age information max_val maximum value age interval split step step used split age interval min_val minimum value age interval split","code":""},{"path":"/reference/get_age_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method for constructing age-group variable from age column\nThis method splits an age interval from min_val to max_val into\n(max_val-min_val)/step intervals.\nBy default min_val is set 0, however it can be assigned by\nconvenience.\nIf the method finds ages greater or equal than max_val\nit assigns the string ","text":"age_group","code":""},{"path":"/reference/get_age_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for constructing age-group variable from age column\nThis method splits an age interval from min_val to max_val into\n(max_val-min_val)/step intervals.\nBy default min_val is set 0, however it can be assigned by\nconvenience.\nIf the method finds ages greater or equal than max_val\nit assigns the string ","text":"","code":"if (FALSE) { cohortdata <- data.frame() cohortdata$age.group <- get_age_group(cohortdata, \"age\", 80, 9) }"},{"path":"/reference/get_immunization_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to construct the inmunization date — get_immunization_date","title":"Function to construct the inmunization date — get_immunization_date","text":"function returns column immunization corresponds analysed outcome. register presents outcome function search closest vaccine date outcome satisfies condition: vacc_date_col <= outcome_date_col - delay_time - immunization_delay. condition allows discriminate vaccine dates terms characteristic time days (delay_time) associated outcome, onset symptoms reference event, characteristic time days patient considered immune (immunization_delay). parameters can set zero user without affecting results. register present outcome, immunization date can construct using closest vaccine date end study (take_first = FALSE), first vaccination date found (take_first = TRUE). Notice function works one several vaccines. case several vaccines, parameter must passed vector (see example)","code":""},{"path":"/reference/get_immunization_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to construct the inmunization date — get_immunization_date","text":"","code":"get_immunization_date(   data,   outcome_date_col,   outcome_delay,   immunization_delay,   vacc_date_col,   end_cohort,   take_first = TRUE )"},{"path":"/reference/get_immunization_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to construct the inmunization date — get_immunization_date","text":"data dataset least one column generate status outcome_date_col name column contains outcome dates outcome_delay characteristic time days outcome reference event immunization_delay characteristic time days patient considered immune vacc_date_col name column(s) contains vaccine dates end_cohort end date study take_first TRUE: takes minimum vaccine date registers without outcome. FALSE: takes closest end_cohort","code":""},{"path":"/reference/get_immunization_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to construct the inmunization date — get_immunization_date","text":"status_col","code":""},{"path":"/reference/get_immunization_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to construct the inmunization date — get_immunization_date","text":"","code":"if (FALSE) { cohortdata <- data.frame() cohortdata$immunization.death <- get_immunization_date(cohortdata, \"death.date\", 1, 1, c(\"vaccine.date.1\", \"vaccine.date.2\"), \"2021-12-31\", take_first = FALSE) }"},{"path":"/reference/get_immunization_dose.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to construct dose associated to the immunization date — get_immunization_dose","title":"Function to construct dose associated to the immunization date — get_immunization_dose","text":"function returns names columns associated immunization date. avoid mistakes, necessary set value immunization_delay used previous functions.","code":""},{"path":"/reference/get_immunization_dose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to construct dose associated to the immunization date — get_immunization_dose","text":"","code":"get_immunization_dose(   data,   immunization_date_col,   vacc_date_col,   immunization_delay )"},{"path":"/reference/get_immunization_dose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to construct dose associated to the immunization date — get_immunization_dose","text":"data dataset least one outcome column generate time--event immunization_date_col DESCRIBE! vacc_date_col DESCRIBE! immunization_delay DESCRIBE!","code":""},{"path":"/reference/get_immunization_dose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to construct dose associated to the immunization date — get_immunization_dose","text":"dose","code":""},{"path":[]},{"path":"/reference/get_immunization_vaccine.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to construct vaccine biologic associated to the immunization date — get_immunization_vaccine","title":"Function to construct vaccine biologic associated to the immunization date — get_immunization_vaccine","text":"function returns names vaccines associated immunization date. avoid mistakes, necessary set value immunization_delay used previous functions. arguments vacc_date_col vacc_name_col order, .e. every name column date must correspond name vaccine column (see example)","code":""},{"path":"/reference/get_immunization_vaccine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to construct vaccine biologic associated to the immunization date — get_immunization_vaccine","text":"","code":"get_immunization_vaccine(   data,   immunization_date_col,   vacc_date_col,   vacc_name_col,   immunization_delay )"},{"path":"/reference/get_immunization_vaccine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to construct vaccine biologic associated to the immunization date — get_immunization_vaccine","text":"data dataset least one outcome column generate time--event immunization_date_col DESCRIBE! vacc_date_col DESCRIBE! vacc_name_col DESCRIBE! immunization_delay DESCRIBE!","code":""},{"path":"/reference/get_immunization_vaccine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to construct vaccine biologic associated to the immunization date — get_immunization_vaccine","text":"vaccine type","code":""},{"path":[]},{"path":"/reference/get_time_to_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to construct the time-to-event — get_time_to_event","title":"Function to construct the time-to-event — get_time_to_event","text":"function returns column time--event days occurred reference outcome. register presents outcome, function searches closest vaccine date outcome satisfies condition: vacc_date_col <= outcome_date_col - delay_time immunization_delay. condition allows discriminate vaccine dates terms characteristic time days (delay_time) associated outcome, onset symptoms reference event, characteristic time days patient considered immune (immunization_delay). parameters can set zero user without affecting results. register present outcome, immunization date can construct using closest vaccine date end study (take_first = FALSE), first vaccination date found (take_first = TRUE). Notice function works one several vaccines. case several vaccines, parameter must passed vector (see example)","code":""},{"path":"/reference/get_time_to_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to construct the time-to-event — get_time_to_event","text":"","code":"get_time_to_event(   data,   outcome_date_col,   start_cohort,   end_cohort,   start_from_immunization = FALSE,   immunization_date_col = FALSE )"},{"path":"/reference/get_time_to_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to construct the time-to-event — get_time_to_event","text":"data dataset least one outcome column generate time--event outcome_date_col name column contains outcome dates start_cohort start date study end_cohort end date study start_from_immunization TRUE: starts counting time--event immunization date available FALSE: starts counting time--event start date cohort study immunization_date_col Required start_from_immunization = TRUE","code":""},{"path":"/reference/get_time_to_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to construct the time-to-event — get_time_to_event","text":"time_to_event","code":""},{"path":"/reference/get_time_to_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to construct the time-to-event — get_time_to_event","text":"","code":"if (FALSE) { cohortdata <- data.frame() cohortdata$immunization.death <-   get_immunization_date(cohortdata,                        \"death.date\",                        1,                        1,                        c(\"vaccine.date.1\", \"vaccine.date.2\"),                        \"2021-12-31\",                        take_first = FALSE) cohortdata$time.to.death <- get_time_to_event(cohortdata, \"death.date\",                                             \"2021-01-01\", \"2021-12-31\",                                             TRUE, \"immunization.death\") }"},{"path":"/reference/set_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to assign the outcome status or the vaccination status\nThis function generates a binary status column using the set of columns,\npassed through the\nvariable col_names. This columns must contain the information of\nthe outcomes or the vaccine dates.\nIt generates a logical condition using the operators ","title":"Function to assign the outcome status or the vaccination status\nThis function generates a binary status column using the set of columns,\npassed through the\nvariable col_names. This columns must contain the information of\nthe outcomes or the vaccine dates.\nIt generates a logical condition using the operators ","text":"Function assign outcome status vaccination status function generates binary status column using set columns, passed variable col_names. columns must contain information outcomes vaccine dates. generates logical condition using operators \"&\" \"|\", evaluates registers columns contain information. logical operator \"&\", function returns 1, columns contain information. hand, logical operator \"|\", enough find one column information. recommended use method working several outcomes severa vaccine doses. default, returns binary column 0 means outcome vaccine 1 means opposite. However, can also receive personalized options, e.g. c(\"v\", \"u\") unvaccinated vaccinated.","code":""},{"path":"/reference/set_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to assign the outcome status or the vaccination status\nThis function generates a binary status column using the set of columns,\npassed through the\nvariable col_names. This columns must contain the information of\nthe outcomes or the vaccine dates.\nIt generates a logical condition using the operators ","text":"","code":"set_status(data, col_names, operator = \"&\", status = c(1, 0))"},{"path":"/reference/set_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to assign the outcome status or the vaccination status\nThis function generates a binary status column using the set of columns,\npassed through the\nvariable col_names. This columns must contain the information of\nthe outcomes or the vaccine dates.\nIt generates a logical condition using the operators ","text":"data dataset least one column generate status col_names name column containing age information operator logical operator evaluate condition status binary set status, e.g. c(1,0)","code":""},{"path":"/reference/set_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to assign the outcome status or the vaccination status\nThis function generates a binary status column using the set of columns,\npassed through the\nvariable col_names. This columns must contain the information of\nthe outcomes or the vaccine dates.\nIt generates a logical condition using the operators ","text":"age_group","code":""},{"path":"/reference/set_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to assign the outcome status or the vaccination status\nThis function generates a binary status column using the set of columns,\npassed through the\nvariable col_names. This columns must contain the information of\nthe outcomes or the vaccine dates.\nIt generates a logical condition using the operators ","text":"","code":"if (FALSE) { cohortdata <- data.frame() cohortdata$vaccine.status <- set_status(cohortdata,                                          c(\"vaccine.date.1\",                                            \"vaccine.date.2\"),                                          status = c(\"v\", \"u\")) }"},{"path":"/reference/vaccineff-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vaccineff: Estimation of the Vaccines Effectiveness Based on Different Designs — vaccineff-package","title":"vaccineff: Estimation of the Vaccines Effectiveness Based on Different Designs — vaccineff-package","text":"package estimate vaccines effectiveness based different designs. following format: Author et al. (2023) doi:10.5281/zenodo.6619350 .","code":""},{"path":"/reference/vaccineff-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vaccineff: Estimation of the Vaccines Effectiveness Based on Different Designs — vaccineff-package","text":"Maintainer: Zulma M. Cucunubá zulma.cucunuba@javeriana.edu.co Authors: David Santiago Quevedo ex-dsquevedo@javeriana.edu.co Santiago Loaiza santiago.loaiza@javeriana.edu.co contributors: Geraldine Gómez Millán geralidine.gomez@javeriana.edu.co [contributor]","code":""}]
